package CondoWare2;

import javax.swing.JOptionPane;

public class CondoWare extends javax.swing.JFrame {

    
    public CondoWare() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    
    private static String senhaPostgreSql = "";
    private static String cpf = "";
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rotEmail = new javax.swing.JLabel();
        rotSenha = new javax.swing.JLabel();
        cxEmail = new javax.swing.JTextField();
        cxSenha = new javax.swing.JPasswordField();
        btEntrar = new javax.swing.JButton();
        rotSenhaPostgresql = new javax.swing.JLabel();
        cxSenhaPostgresql = new javax.swing.JPasswordField();
        btConectar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela de Login");

        rotEmail.setText("Email:");

        rotSenha.setText("Senha:");

        cxEmail.setText("laura@gmail.com");

        cxSenha.setText("root");

        btEntrar.setText("Entrar");
        btEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEntrarActionPerformed(evt);
            }
        });

        rotSenhaPostgresql.setText("Senha para PostgreSql:");

        cxSenhaPostgresql.setText("Jv102030*");
        cxSenhaPostgresql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxSenhaPostgresqlActionPerformed(evt);
            }
        });

        btConectar.setText("Conectar");
        btConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btEntrar)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rotEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cxEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(cxSenha)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rotSenhaPostgresql)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cxSenhaPostgresql, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btConectar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotEmail)
                    .addComponent(cxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotSenha)
                    .addComponent(cxSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btEntrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotSenhaPostgresql)
                    .addComponent(cxSenhaPostgresql, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConectar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConectarActionPerformed
        senhaPostgreSql = cxSenhaPostgresql.getText();
        Conexao.getConexao();
    }//GEN-LAST:event_btConectarActionPerformed

    private void cxSenhaPostgresqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxSenhaPostgresqlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxSenhaPostgresqlActionPerformed

    private void btEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEntrarActionPerformed
        int cargo = Conexao.getConexao().verificaCargo(cxEmail.getText());
        String senhaCerta = "";
        if(cargo == 0) { //não achou email
            JOptionPane.showMessageDialog(
                        null,
                        "Email não encontrado!",
                        "Não encontrado",
                        0);  
        }
        else {
            senhaCerta = Conexao.getConexao().buscaSenha(cxEmail.getText());
            if(senhaCerta.equals(cxSenha.getText())){
                JOptionPane.showMessageDialog(
                        null,
                        "Logado com sucesso!",
                        "Log in",
                        1);
                if(cargo == 1) { //síndico
                    TelaDoSindico.getTelaSindicoUnic().setVisible(true);
                }
                if(cargo == 2) { //funcionario
                    TelaDoFuncionario.getTelaFuncUnic().setVisible(true);
                }
                if(cargo == 3) { //morador
                    TelaDoCondomino.getTelaCondominoUnic().setVisible(true);
                }
                setCpf(Conexao.getConexao().buscaCpf(cxEmail.getText()));
            }
            else {
                JOptionPane.showMessageDialog(
                        null,
                        "Senha incorreta",
                        "Senha incorreta",
                        0);
            }
        }
    }//GEN-LAST:event_btEntrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CondoWare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CondoWare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CondoWare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CondoWare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CondoWare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConectar;
    private javax.swing.JButton btEntrar;
    private javax.swing.JTextField cxEmail;
    private javax.swing.JPasswordField cxSenha;
    private javax.swing.JPasswordField cxSenhaPostgresql;
    private javax.swing.JLabel rotEmail;
    private javax.swing.JLabel rotSenha;
    private javax.swing.JLabel rotSenhaPostgresql;
    // End of variables declaration//GEN-END:variables

    public static String getSenhaPostgreSql() {
        return senhaPostgreSql;
    }

    public static void setSenhaPostgreSql(String senhaPostgreSql) {
        CondoWare.senhaPostgreSql = senhaPostgreSql;
    }

    public static String getCpf() {
        return cpf;
    }

    public static void setCpf(String cpf) {
        CondoWare.cpf = cpf;
    }
}
